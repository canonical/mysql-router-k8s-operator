# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: '53 0 * * *' # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run linters
        run: tox run -e lint

  unit-test:
    name: Unit test charm
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run tests
        run: tox run -e unit

  build:
    name: Build charm
    uses: canonical/data-platform-workflows/.github/workflows/build_charms_with_cache.yaml@v4.2.3
    permissions:
      actions: write  # Needed to manage GitHub Actions cache

  gh-hosted-collect-integration-tests:
    name: (GH hosted) Collect integration test groups
    needs:
      - lint
      - unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Select test stability level
        id: select-test-stability
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> "$GITHUB_OUTPUT"
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> "$GITHUB_OUTPUT"
          fi
      - name: Collect test groups
        id: collect-groups
        run: tox run -e integration -- tests/integration -m '${{ steps.select-test-stability.outputs.mark_expression }}' --collect-groups
    outputs:
      groups: ${{ steps.collect-groups.outputs.groups }}

  gh-hosted-integration-test:
    strategy:
      fail-fast: false
      matrix:
        groups: ${{ fromJSON(needs.gh-hosted-collect-integration-tests.outputs.groups) }}
        juju-snap-channel:  ["2.9/stable", "3.1/stable"]
        include:
          - juju-snap-channel: "3.1/stable"
            agent-version: "3.1.6"
            libjuju-version:  "3.2.2"
          - juju-snap-channel: "2.9/stable"
            agent-version: "2.9.45"
            libjuju-version:  "2.9.44.1"
    name: ${{ matrix.juju-snap-channel }} - (GH hosted) ${{ matrix.groups.job_name }} | ${{ matrix.ubuntu-versions.series }}
    needs:
      - lint
      - unit-test
      - build
      - gh-hosted-collect-integration-tests
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Free up disk space
        run: |
          # From https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: "1.28-strict/stable"
          bootstrap-options: "--agent-version ${{ matrix.agent-version }}"
          juju-channel: ${{ matrix.juju-snap-channel }}
      - name: Update python-libjuju version
        if: ${{ matrix.libjuju-version == '2.9.44.1' }}
        run: poetry add --lock --group integration juju@'${{ matrix.libjuju-version }}'            
      - name: Download packed charm(s)
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact-name }}
      - name: Select test stability level
        id: select-test-stability
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> "$GITHUB_OUTPUT"
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> "$GITHUB_OUTPUT"
          fi
      - name: Run integration tests
        run: tox run -e integration -- "${{ matrix.groups.path_to_test_file }}" --group="${{ matrix.groups.group_number }}" -m '${{ steps.select-test-stability.outputs.mark_expression }}'
        env:
          LIBJUJU_VERSION_SPECIFIER: ${{ matrix.libjuju-version }}
